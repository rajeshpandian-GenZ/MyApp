name: iOS starter workflow2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install deps
        run: yarn install --ignore-engines
        
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x' # Replace with the desired version

      - name: Display Node.js version
        run: node --version       
        
      - name: Set Default Scheme
        run: |
          cd ios
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          
      - name: Open iOS Simulator
        run: open -a Simulator
          
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
      - name: Build iOS simulator
        run: |
          npx react-native run-ios --simulator="iPhone 12" || (echo "Failed to build iOS project. Attempting Xcode build logs capture..." && xcodebuild -quiet -project "myapp.xcodeproj" > build.log 2>&1)
          if [ -f "build.log" ]; then
            echo "Xcode build logs:"
            cat build.log
          fi
          exit 1
          cd ios
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          ./sauce_connect/bin/sc --datacenter us-west-1 --region us --test-type xctestrun --test-name "$scheme.xctestrun" --app "$file_to_build" -platform "iOS Simulator/$device"

      - name: Stop Sauce Connect
        run: ./sauce_connect/bin/sc --stop
